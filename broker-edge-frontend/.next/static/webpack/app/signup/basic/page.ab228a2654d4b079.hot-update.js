"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/signup/basic/page",{

/***/ "(app-pages-browser)/./src/lib/rest/addBusiness.ts":
/*!*************************************!*\
  !*** ./src/lib/rest/addBusiness.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addBusiness: () => (/* binding */ addBusiness)\n/* harmony export */ });\nasync function postBusiness(business) {\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify({\n            businessName: business.name,\n            phone: business.phone,\n            email: business.email,\n            password: business.password\n        }),\n        headers: {\n            accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        }\n    };\n    try {\n        const response = await fetch(\"http://localhost:8000/business\", options);\n        return await response.json();\n    } catch (err) {\n        console.error(\"Fetch Error\", err);\n        return {\n            success: false,\n            error: \"Failed to connect to server\"\n        };\n    }\n}\nasync function addBusiness(business) {\n    console.log(\"over here before save inside addbusiness\");\n    return await postBusiness(business);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvcmVzdC9hZGRCdXNpbmVzcy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBRUEsZUFBZUEsYUFBYUMsUUFBaUI7SUFDekMsTUFBTUMsVUFBVTtRQUNaQyxRQUFRO1FBQ1JDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztZQUNqQkMsY0FBY04sU0FBU08sSUFBSTtZQUMzQkMsT0FBT1IsU0FBU1EsS0FBSztZQUNyQkMsT0FBT1QsU0FBU1MsS0FBSztZQUNyQkMsVUFBVVYsU0FBU1UsUUFBUTtRQUMvQjtRQUNBQyxTQUFTO1lBQ0xDLFFBQVE7WUFDUixnQkFBZ0I7UUFDcEI7SUFDSjtJQUVBLElBQUk7UUFDQSxNQUFNQyxXQUFXLE1BQU1DLE1BQ25CLGtDQUNBYjtRQUVKLE9BQU8sTUFBTVksU0FBU0UsSUFBSTtJQUM5QixFQUFFLE9BQU1DLEtBQVU7UUFDZEMsUUFBUUMsS0FBSyxDQUFDLGVBQWVGO1FBQzdCLE9BQU87WUFBRUcsU0FBUztZQUFPRCxPQUFPO1FBQThCO0lBQ2xFO0FBQ0o7QUFFTyxlQUFlRSxZQUFZcEIsUUFBa0I7SUFDaERpQixRQUFRSSxHQUFHLENBQUM7SUFDWixPQUFPLE1BQU10QixhQUFhQztBQUM5QiIsInNvdXJjZXMiOlsiL1VzZXJzL2tpbXNpbnRvbi9zcmMvYnJva2VyLWVkZ2UvYnJva2VyLWVkZ2UtZnJvbnRlbmQvc3JjL2xpYi9yZXN0L2FkZEJ1c2luZXNzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QnVzaW5lc3N9IGZyb20gXCIuLi9zdG9yZVwiO1xuXG5hc3luYyBmdW5jdGlvbiBwb3N0QnVzaW5lc3MoYnVzaW5lc3M6QnVzaW5lc3MpIHtcbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICBidXNpbmVzc05hbWU6IGJ1c2luZXNzLm5hbWUsXG4gICAgICAgICAgICBwaG9uZTogYnVzaW5lc3MucGhvbmUsXG4gICAgICAgICAgICBlbWFpbDogYnVzaW5lc3MuZW1haWwsXG4gICAgICAgICAgICBwYXNzd29yZDogYnVzaW5lc3MucGFzc3dvcmQsXG4gICAgICAgIH0pLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBhY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICAgICAgfSxcbiAgICB9O1xuXG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgICAgIFwiaHR0cDovL2xvY2FsaG9zdDo4MDAwL2J1c2luZXNzXCIsXG4gICAgICAgICAgICBvcHRpb25zXG4gICAgICAgIClcbiAgICAgICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICB9IGNhdGNoKGVycjogYW55KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGZXRjaCBFcnJvclwiLCBlcnIpO1xuICAgICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IFwiRmFpbGVkIHRvIGNvbm5lY3QgdG8gc2VydmVyXCIgfTtcbiAgICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhZGRCdXNpbmVzcyhidXNpbmVzczogQnVzaW5lc3MpOiBQcm9taXNlPG9iamVjdD4ge1xuICAgIGNvbnNvbGUubG9nKFwib3ZlciBoZXJlIGJlZm9yZSBzYXZlIGluc2lkZSBhZGRidXNpbmVzc1wiKTtcbiAgICByZXR1cm4gYXdhaXQgcG9zdEJ1c2luZXNzKGJ1c2luZXNzKTtcbn0iXSwibmFtZXMiOlsicG9zdEJ1c2luZXNzIiwiYnVzaW5lc3MiLCJvcHRpb25zIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJidXNpbmVzc05hbWUiLCJuYW1lIiwicGhvbmUiLCJlbWFpbCIsInBhc3N3b3JkIiwiaGVhZGVycyIsImFjY2VwdCIsInJlc3BvbnNlIiwiZmV0Y2giLCJqc29uIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwic3VjY2VzcyIsImFkZEJ1c2luZXNzIiwibG9nIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/rest/addBusiness.ts\n"));

/***/ })

});